[project]
name = "vtai"
version = "0.1.10"
description = " VT.ai - Minimal multimodal AI chat app with dynamic conversation routing "
authors = [{ name = "Vinh Nguyen" }]
dependencies = [
    "chainlit>=2.0.0",
    "litellm>=1.30.0",
    "openai>=1.20.0",
    "pydantic==2.10.1",
    "python-dotenv>=1.0.0",
    "semantic-router[fastembed]>=0.0.54",
    "pillow>=10.0.0",
    "google-generativeai>=0.3.0",
]
readme = "README.md"
requires-python = ">= 3.11"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Development Status :: 4 - Beta",
]

[project.urls]
"Homepage" = "https://github.com/vinhnx/VT.ai"
"Bug Tracker" = "https://github.com/vinhnx/VT.ai/issues"

[project.scripts]
vtai = "vtai.app:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["vtai"]

[dependency-groups]
dev = [
    "ruff>=0.11.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".src/utils/llm_provider_settings.py",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.9
target-version = "0.1.10"

[tool.ruff.lint]
# 1. Enable flake8-bugbear (`B`) rules, in addition to the defaults.
select = ["E4", "E7", "E9", "F", "B"]

# 2. Avoid enforcing line-length violations (`E501`)
ignore = ["E501"]

# 3. Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]


# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"